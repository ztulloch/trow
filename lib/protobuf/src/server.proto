syntax = "proto3";

package lycaon;

message UploadRequest {
  //e.g. "amouat/network-utils", "nginx", "my-org/my-team/my-repo"
  string repo_name = 1;
  //Expect some auth stuff as well later
}

message UploadDetails {
  string uuid = 1;
}

//TODO: Should have been uploadref as it has the UUID
message BlobRef {
  string repo_name = 1;
  string uuid = 2;
}

//TODO: Maybe this should be blob ref. Groan.
message DownloadRef {
  string repo_name = 1;
  string digest = 2;
}

//At the moment this will be a simple file path, but could evolve in future
message WriteLocation {
  string path = 1;
}

//Could have a single "Location", but this allows divergence in the future
message BlobReadLocation {
  string path = 1;
}

//At the moment this will be a simple file path, but could evolve in future
message CompleteRequest {
  string repo_name = 1;
  string uuid = 2;
  string user_digest = 3;
}

message CompletedUpload {
  string digest = 1;
}

message ManifestRef {
  string repo_name = 1;
  //Can be digest or tag
  string reference = 2;
}

message VerifiedManifest {
  string digest = 1;
  //Version of manifest, used for media type return
  string content_type = 2;
}

message ManifestReadLocation {
  string digest = 1;
  //For the moment path to file
  string path = 2;
  //Version of manifest, used for media type return
  string content_type = 3;
}


message CatalogRequest {
  //Currently empty, could ask for subset, auth will be necessary later
}

message CatalogEntry {
  string repo_name = 1;
}

message Tag {
  string tag = 1;
}

service Backend {

  //Note UUID is really just a reference number, doesn't have to be a UUID. Blame Docker.
  //Assigns a "UUID" to a Upload that is then used to track it
  rpc RequestUpload (UploadRequest) returns (UploadDetails) {}

  //Given a UUID, return where to write the upload to
  //For the moment this is just a file path
  rpc GetWriteLocationForBlob (BlobRef) returns (WriteLocation) {}

  //Given a digest and repo, get the download
  rpc GetReadLocationForBlob (DownloadRef) returns (BlobReadLocation) {}

  //Given a UUID, return where to write the upload to
  //For the moment this is just a file path
  rpc GetWriteLocationForManifest (ManifestRef) returns (WriteLocation) {}

  rpc GetReadLocationForManifest (ManifestRef) returns (ManifestReadLocation) {}
  
  //Check the blobs exist and the digest is correct etc
  rpc VerifyManifest (ManifestRef) returns (VerifiedManifest) {}

  // Called once all blobs and manifest has been uploaded
  // Returns _server_ digest, which may differ to the _user_ digest (due to compression alg)
  rpc CompleteUpload (CompleteRequest) returns (CompletedUpload) {}

  rpc GetCatalog (CatalogRequest) returns (stream CatalogEntry) {}

  rpc ListTags (CatalogEntry) returns (stream Tag) {}

}
